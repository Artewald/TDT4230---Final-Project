
for (int i_NN = 0; i_NN < level_NN.length(); i_NN++) {
    if (level_NN[i_NN] == UINT_MAX) continue;
    temp_voxel = voxel_data.data[level_NN[i_NN]];
    intersection_info = check_for_intersection(temp_voxel, ray, invRaydir);
    if (intersection_info.point == vec3(INFINITY_F) || !is_closer(ray, intersection_info, closest)) continue;
    if (is_leaf_node(temp_voxel)) {
        ret_val = fill_hit_info(temp_voxel, intersection_info, ray);
        closest = get_distance(ray, intersection_info);
        return ret_val;
        continue;
    }
    const uint[8] level_MMM = sort_child_voxels_by_distance(temp_voxel, ray);//get_children_indices(temp_voxel);